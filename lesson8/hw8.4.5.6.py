'''
Начните работу над проектом «Склад оргтехники».
Создайте класс, описывающий склад. А также класс «Оргтехника»,
который будет базовым для классов-наследников.
Эти классы — конкретные типы оргтехники (принтер, сканер, ксерокс).
В базовом классе определить параметры, общие для приведенных типов.
В классах-наследниках реализовать параметры, уникальные для каждого типа оргтехники.
5) Продолжить работу над первым заданием.
Разработать методы, отвечающие за приём оргтехники на склад и передачу
\в определенное подразделение компании. Для хранения данных о наименовании и
количестве единиц оргтехники, а также других данных, можно использовать любую подходящую структуру,
например словарь.
6) Продолжить работу над вторым заданием.
Реализуйте механизм валидации вводимых пользователем данных.
Например, для указания количества принтеров, отправленных на склад, нельзя использовать
строковый тип данных.
Подсказка: постарайтесь по возможности реализовать в
проекте «Склад оргтехники» максимум возможностей, изученных на уроках по ООП.

'''
class Goods:
    def __init__(self,param):
        self.param = param


class Orgtech(Goods):

    def __init__(self,*args):
        super().__init__(args)
        self.args = args
        self.args1 = args #  чернила черные
        self.args2 = args # чернила цветные


    def metod(self):
        return f'Оргтехника '


class Print(Orgtech):
    def __init__(self,param1, param2):
        Orgtech.__init__(self,param1,param2)
        self.args1 = param1
        self.args2 = param2


class Scan(Orgtech):
    def __init__(self):
        Orgtech.__init__(self)

class Xerox(Orgtech):
    def __init__(self,param1, args2):
        Orgtech.__init__(self,param1, args2)
        self.args = param1
        self.args2 = args2


